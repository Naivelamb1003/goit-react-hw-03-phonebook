{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","setState","currentTarget","value","reset","handleAdd","e","preventDefault","props","onSubmit","this","className","style","labelForm","type","onChange","butForm","Component","ContactListItem","id","deletedContacts","listitem","onClick","btlist","ContactList","contacts","filterCallback","list","filter","contact","map","Filter","containerFilter","App","isContactExist","undefined","find","console","log","target","prevState","addHandler","contactFormState","length","alert","concat","uuidv4","filterContact","toLowerCase","indexOf","contactFromStorage","localStorage","getItem","parseContact","JSON","parse","prevProps","setItem","stringify","container","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,gBAAgB,2BAA2B,aAAa,wBAAwB,WAAW,sBAAsB,UAAY,uBAAuB,MAAQ,qB,oBCAtOD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,QAAU,+B,iBCAvED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,OAAS,kC,kBCAxED,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,kC,oMCuDrBC,E,4MAnDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAME,cAAcL,KAAOG,EAAME,cAAcC,S,EAIpDC,MAAQ,WACN,EAAKH,SAAS,CAAEJ,KAAM,GAAIC,OAAQ,M,EAGpCO,UAAY,SAACC,GACXA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKb,OACzB,EAAKQ,S,uDAIL,OACE,uBAAMK,SAAUC,KAAKL,UAArB,UACE,wBAAOM,UAAWC,IAAMC,UAAxB,iBAEE,uBACEC,KAAK,OACLjB,KAAK,OACLM,MAAOO,KAAKd,MAAMC,KAClBkB,SAAUL,KAAKX,kBAGnB,wBAAOY,UAAWC,IAAMC,UAAxB,mBAEE,uBACEC,KAAK,MACLjB,KAAK,SACLM,MAAOO,KAAKd,MAAME,OAClBiB,SAAUL,KAAKX,kBAGnB,wBAAQe,KAAK,SAASH,UAAWC,IAAMI,QAAvC,gC,GA3CkBC,a,gBCiBXC,EAlBS,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,GAAIrB,EAAmC,EAAnCA,OAAQD,EAA2B,EAA3BA,KAAMuB,EAAqB,EAArBA,gBAC1C,OACE,qBAAaT,UAAWC,IAAMS,SAA9B,UACGxB,EADH,KACWC,EACT,wBAAQgB,KAAK,SAASK,GAAIA,EAAIG,QAASF,EAAiBT,UAAWC,IAAMW,OAAzE,sBAFOJ,I,iBCwBEK,EAzBK,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,eAAgBN,EAAsB,EAAtBA,gBAC/C,OACE,oBAAIT,UAAWC,IAAMe,KAArB,SACGF,EACEG,QACC,SAACC,GAAD,OACAH,EAAeG,EAAQhC,SAExBiC,KAAI,SAACD,GAAD,OACH,cAAC,EAAD,CACEV,GAAIU,EAAQV,GACZtB,KAAMgC,EAAQhC,KACdC,OAAQ+B,EAAQ/B,OAChBsB,gBAAiBA,U,iBCMdW,EAnBA,SAAC,GAA6B,IAA3BH,EAA0B,EAA1BA,OAAQ7B,EAAkB,EAAlBA,aACxB,OACE,qBAAKY,UAAWC,IAAMoB,gBAAtB,SACJ,uBACYlB,KAAK,OACLjB,KAAK,SACLM,MAAOyB,EACPb,SAAUhB,OCoFPkC,E,4MAvFbrC,MAAQ,CACN6B,SAAS,GACTG,OAAQ,I,EAIVM,eAAiB,SAAC/B,GAIhB,YAAmBgC,IAHH,EAAKvC,MAAM6B,SAASW,MAClC,SAACP,GAAD,OAAaA,EAAQhC,OAASM,M,EAKlCiB,gBAAkB,SAACd,GACjB+B,QAAQC,IAAIhC,EAAEiC,OAAOpB,IACrB,EAAKlB,UAAS,SAACuC,GACb,MAAO,CACLf,SAAS,YACJe,EAAUf,SAASG,QAAO,qBAAGT,KAAgBb,EAAEiC,OAAOpB,Y,EAMjEsB,WAAa,SAACC,GACZL,QAAQC,IAAII,EAAiB7C,KAAK8C,QAC9B,EAAKT,eAAeQ,EAAiB7C,OAA0C,IAAjC6C,EAAiB7C,KAAK8C,OACtEC,MAAM,GAAD,OAAIF,EAAiB7C,KAArB,6BAEL,EAAKI,UAAS,SAACuC,GACb,MAAO,CACLf,SAAUe,EAAUf,SAASoB,OAAO,CAClChD,KAAM6C,EAAiB7C,KACvBC,OAAQ4C,EAAiB5C,OACzBqB,GAAI2B,qB,EAOd/C,aAAe,SAACC,GACd,EAAKC,SAAS,CACZ2B,OAAQ5B,EAAME,cAAcC,S,EAIhC4C,cAAgB,SAAClD,GACf,OAAwE,IAAjEA,EAAKmD,cAAcC,QAAQ,EAAKrD,MAAMgC,OAAOoB,gB,kEAItD,IAAME,EAAqBC,aAAaC,QAAQ,WAC1CC,EAAeC,KAAKC,MAAML,GAE7BG,GACD3C,KAAKT,SAAS,CAACwB,SAAS4B,M,yCAIPG,EAAUhB,GACxB9B,KAAKd,MAAM6B,WAAae,EAAUf,UACzC0B,aAAaM,QAAS,UAAWH,KAAKI,UAAUhD,KAAKd,MAAM6B,a,+BAIvD,OACE,sBAAKd,UAAWC,IAAM+C,UAAtB,UACE,gCACE,oBAAIhD,UAAWC,IAAMgD,MAArB,uBACA,cAAC,EAAD,CAAanD,SAAUC,KAAK+B,gBAG9B,gCACE,oBAAI9B,UAAWC,IAAMgD,MAArB,sBACA,mBAAGjD,UAAWC,IAAMgD,MAApB,mCACA,cAAC,EAAD,CAAQhC,OAAQlB,KAAKd,MAAMgC,OAAQ7B,aAAcW,KAAKX,eACtD,cAAC,EAAD,CACE0B,SAAUf,KAAKd,MAAM6B,SACrBC,eAAgBhB,KAAKqC,cACrB3B,gBAAiBV,KAAKU,4B,GAjFhBH,aCDlB4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.410315cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2XmZq\",\"App-logo\":\"App_App-logo__1YL30\",\"App-logo-spin\":\"App_App-logo-spin__3VxrB\",\"App-header\":\"App_App-header__3UXMc\",\"App-link\":\"App_App-link__3iHKA\",\"container\":\"App_container__2Uq8Q\",\"title\":\"App_title__211dy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelForm\":\"ContactForm_labelForm__hc5SM\",\"butForm\":\"ContactForm_butForm__3FXga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listitem\":\"ContactListItem_listitem__60evC\",\"btlist\":\"ContactListItem_btlist__1aqTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__oYZXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerFilter\":\"Filter_containerFilter__1i2fc\"};","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport style from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component{\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n  \r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleAdd = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleAdd}>\r\n        <label className={style.labelForm}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={style.labelForm}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={style.butForm}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport style from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({id, number, name, deletedContacts}) => {\r\n  return (\r\n    <li key={id} className={style.listitem}>\r\n      {name}: {number}\r\n      <button type=\"button\" id={id} onClick={deletedContacts} className={style.btlist}>\r\n            Delete\r\n          </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  number: PropTypes.string,\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  deletedContacts: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, filterCallback, deletedContacts }) => {\r\n  return (\r\n    <ul className={style.list}>\r\n      {contacts\r\n        .filter(\r\n          (contact) =>\r\n          filterCallback(contact.name)\r\n        )\r\n        .map((contact) => (\r\n          <ContactListItem\r\n            id={contact.id}\r\n            name={contact.name}\r\n            number={contact.number}\r\n            deletedContacts={deletedContacts}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  cotacts: PropTypes.array,\r\n  deletedContacts: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","\r\nimport PropTypes from \"prop-types\";\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, handleChange}) => {\r\n  return (\r\n    <div className={style.containerFilter}>\r\n<input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={handleChange}\r\n          />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n    filter:PropTypes.string,\r\n    handleChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;","import { Component } from \"react\";\r\nimport style from \"./App.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts:[],\r\n    filter: \"\",\r\n  };\r\n\r\n \r\n  isContactExist = (value) => {\r\n    const element = this.state.contacts.find(\r\n      (contact) => contact.name === value\r\n    );\r\n    return element !== undefined;\r\n  };\r\n\r\n  deletedContacts = (e) => {\r\n    console.log(e.target.id);\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: [\r\n          ...prevState.contacts.filter(({ id }) => id !== e.target.id),\r\n        ],\r\n      };\r\n    });\r\n  };\r\n\r\n  addHandler = (contactFormState) => {\r\n    console.log(contactFormState.name.length);\r\n    if (this.isContactExist(contactFormState.name) || contactFormState.name.length === 0) {\r\n      alert(`${contactFormState.name} is already in contacts.`);\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          contacts: prevState.contacts.concat({\r\n            name: contactFormState.name,\r\n            number: contactFormState.number,\r\n            id: uuidv4(),\r\n          }),\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      filter: event.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  filterContact = (name) => {\r\n    return name.toLowerCase().indexOf(this.state.filter.toLowerCase()) !== -1;\r\n  };\r\n\r\ncomponentDidMount(){\r\n  const contactFromStorage = localStorage.getItem('contact');\r\n  const parseContact = JSON.parse(contactFromStorage);\r\n\r\n  if(parseContact){\r\n    this.setState({contacts:parseContact})\r\n  }\r\n}\r\n\r\n  componentDidUpdate(prevProps,prevState){\r\n    if(this.state.contacts !== prevState.contacts)\r\nlocalStorage.setItem( 'contact', JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.container}>\r\n        <div>\r\n          <h1 className={style.title}>Phonebook</h1>\r\n          <ContactForm onSubmit={this.addHandler} />\r\n        </div>\r\n\r\n        <div>\r\n          <h1 className={style.title}>Contacts</h1>\r\n          <p className={style.title}>Find contacts by name</p>\r\n          <Filter filter={this.state.filter} handleChange={this.handleChange} />\r\n          <ContactList\r\n            contacts={this.state.contacts}\r\n            filterCallback={this.filterContact}\r\n            deletedContacts={this.deletedContacts}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}